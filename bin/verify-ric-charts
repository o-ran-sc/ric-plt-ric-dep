#!/bin/bash
##############################################################################
#
#   Copyright (c) 2019 AT&T Intellectual Property.
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.
#
##############################################################################

# Verifies RIC helm charts
# Requires Linux with wget and tar. 
#This script should be executed inside the ric-plt/ric-dep bin directory only. 

HELMVER=$1
OVERRIDEYAML=$2

ROOT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null && pwd )"

HELM_COMMAND=helm

$HELM_COMMAND > /dev/null 2>&1

if [ $? -ne 0 ];then
    # Set up helm
    HELMVERSION=${HELMVER:=2.12.3}
    if [ ! -e helm-v${HELMVERSION}-linux-amd64.tar.gz ]; then
      wget -nv https://storage.googleapis.com/kubernetes-helm/helm-v${HELMVERSION}-linux-amd64.tar.gz
    fi
    tar -xvf ./helm-v${HELMVERSION}-linux-amd64.tar.gz
    mv linux-amd64/helm ./
    HELM_COMMAND=./helm
fi

# Set up ric common template
# Download it/dep common template charts
git clone --single-branch --branch r3 "https://gerrit.o-ran-sc.org/r/it/dep" ./dep

# Start Helm local repo if there isn't one
HELM_PID=$(ps -x | grep  "$HELM_COMMANDD serve" | grep -v "grep" | awk '{print $1}')
if [ ! -z "$HELM_PID" ]; then
    kill -9 $HELM_PID
fi
if [ ! -d ./charts ]; then
    mkdir ./charts
fi
nohup $HELM_COMMAND serve --repo-path charts >& /dev/null &
# Package ric-common and serve it using Helm local repo
COMMON_CHART_VERSION=$(cat $ROOT_DIR/dep/ric-common/Common-Template/helm/ric-common/Chart.yaml | grep version | awk '{print $2}')
$HELM_COMMAND package -d ./charts $ROOT_DIR/dep/ric-common/Common-Template/helm/ric-common
AUX_COMMON_CHART_VERSION=$(cat $ROOT_DIR/dep/ric-common/Common-Template/helm/aux-common/Chart.yaml | grep version | awk '{print $2}')
$HELM_COMMAND package -d ./charts $ROOT_DIR/dep/ric-common/Common-Template/helm/aux-common
$HELM_COMMAND repo index ./charts
# Make sure that helm local repo is added
$HELM_COMMAND repo remove local
$HELM_COMMAND repo add local http://127.0.0.1:8879/charts
# Remove it/dep charts
rm -rf ./dep

# Create array of helm charts
CHART_ARRAY=()
while IFS= read -r -d $'\0'; do
    CHART_ARRAY+=("$REPLY")
done < <(find $ROOT_DIR/../ -maxdepth 4 -name Chart.yaml -printf '%h\0')

echo "***************************************"

for dir in "${CHART_ARRAY[@]}"
do
  
    echo "Update chart depenedency"
    $HELM_COMMAND dep up $dir 
    # Lint clearly marks errors; e.g., [ERROR]
    if [ -z $OVERRIDEYAML ]; then
        $HELM_COMMAND lint $dir > /tmp/output 2>&1
    else
        $HELM_COMMAND lint -f $OVERRIDEYAML $dir> /tmp/output 2>&1
    fi
    echo "***************************************************************************************************************"
    cat /tmp/output 
    egrep -q '^Error: [0-9]* chart\(s\) linted, [0-9]* chart\(s\) failed' /tmp/output && exit 1
    echo "***************************************************************************************************************"

    if [ -z $OVERRIDEYAML ]; then
        $HELM_COMMAND template $dir > /tmp/output 2>&1
    else
	$HELM_COMMAND template -f $OVERRIDEYAML $dir > /tmp/output 2>&1
    fi
    echo "***************************************************************************************************************"
    cat /tmp/output 
    egrep -n '%!.\(.*=.*\)' /tmp/output && echo "Error: Type mismatch." && exit 1
    echo "***************************************************************************************************************"
done
exit 0

